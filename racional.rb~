# Implementar en este fichero la clase para crear objetos racionales

require "./gcd.rb"

class Fraccion

	attr_reader :n, :d
	def initialize (n,d)
		@n = n
		@d = d
	end
	
	def to_s 
		"#{@n/gcd(@n,@d)}/#{@d/gcd(@n,@d)}"
	end
	
	def +(other)
		if(@d == other.d)
		  Fraccion.new(@n + other.n,@d)
		else
		  Fraccion.new((@n*other.d)+(@d*other.n),@d*other.d)
		end
	end
	
	def -(other)
		if (@d == other.d)
		  Fraccion.new(@n - other.n,@d)
		else
		  Fraccion.new((@n*other.d)-(@d*other.n),@d*other.d)
		end
	end
	
	def *(other)
		Fraccion.new(@n * other.n,@d * other.d)
	end
	
	def /(other)
		Fraccion.new(@n * other.d,@d * other.n)
	end
	  
end

f1 = Fraccion.new(3, 2)
f2 = Fraccion.new(5, 4)

puts "Fracci贸n 1: "
puts "#{f1.to_s}\n"
puts "Fracci贸n 2: "
puts "#{f2.to_s}\n"
puts "Suma: "
puts "#{f1} + #{f2} = #{f1+f2}/n"
puts "Resta: "
puts "#{f1} - #{f2} = #{f1-f2}"
puts "Multiplicaci贸n: "
puts "#{f1} * #{f2} = #{f1*f2}"
puts "Divisi贸n: "
puts "#{f1} / #{f2} = #{f1/f2}"

